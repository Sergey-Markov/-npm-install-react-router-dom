{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGalleryItem.js","Service/Service.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","imageName","setImageName","className","e","preventDefault","type","onChange","currentTarget","value","toLowerCase","trim","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","pictures","onClick","map","picture","id","webformatURL","tags","src","alt","apiService","imageSearch","page","fetch","then","response","ok","json","Promise","reject","Error","Button","Modal","onCloseModal","statusModal","useEffect","window","addEventListener","removeEventListener","largeImageURL","ImageGallery","setPage","error","setError","picturesData","setPicturesData","isOpenModal","setIsOpenModal","setPicture","status","setStatus","a","console","log","hits","catch","avtoScroll","prev","loadNewPictures","loadMorePictures","onModalOpen","scrollTo","top","document","documentElement","scrollHeight","behavior","color","height","width","timeout","toast","message","code","target","length","prevState","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.83eafcf6.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState(\"\");\n\n  function resset() {\n    setImageName(\"\");\n  }\n\n  const hadleAddInputValue = (e) => {\n    setImageName(e.currentTarget.value.toLowerCase().trim());\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(imageName);\n    resset();\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          onChange={hadleAddInputValue}\n          name=\"imageName\"\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={imageName}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nexport default function ImageGalleryItem({ pictures, onClick }) {\n  return pictures.map(picture => {\n    const { id, webformatURL, tags } = picture;\n    return (\n      <li key={id} className=\"ImageGalleryItem\">\n        <img\n          src={webformatURL}\n          alt={tags}\n          className=\"ImageGalleryItem-image\"\n          onClick={() => onClick(picture)}\n        />\n      </li>\n    );\n  });\n}\n\nImageGalleryItem.propTypes = {\n  pictures: PropTypes.array.isRequired,\n  onClick: PropTypes.func,\n};\n","export default function apiService(imageSearch, page) {\n  const API_KEY = '22326636-8d9d25d1f9cff7f7e66e8dd75';\n  const BASE_URL = 'https://pixabay.com/api/';\n  return fetch(\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${imageSearch}&page=${page}&per_page=12&key=${API_KEY}`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Это ошибка, её нужно как-то решить'));\n  });\n}\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <div className=\"more\">\n      <button type=\"text\" className=\"more-loadBtn\" onClick={onClick}>\n        Load more\n      </button>\n    </div>\n  );\n}\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import PropTypes from \"prop-types\";\nimport { useEffect } from \"react\";\n\nexport default function Modal ({picture,onCloseModal, statusModal}) {\n\n  useEffect(() => {\n    if(statusModal) window.addEventListener(\"keydown\", onCloseModal);\n    if(!statusModal)window.removeEventListener(\"keydown\", onCloseModal);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statusModal]);\n\n    return (\n      <div className=\"Overlay\" onClick={onCloseModal}>\n        <div className=\"Modal\">\n          <img src={picture.largeImageURL} alt={picture.tags} />\n        </div>\n      </div>\n    );\n  \n}\n\nModal.propTypes = {\n  picture: PropTypes.object.isRequired,\n  onCloseModal: PropTypes.func,\n  statusModal:PropTypes.bool.isRequired,\n};\n","import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\nimport apiService from \"../../Service/Service\";\nimport Button from \"../Button/Button\";\nimport Modal from \"../Modal/Modal\";\nimport Loader from \"react-loader-spinner\";\n\nexport default function ImageGallery({ imageName }) {\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [picturesData, setPicturesData] = useState([]);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [picture, setPicture] = useState(\"\");\n  const [status, setStatus] = useState(\"idle\");\n\n  useEffect(() => {\n    if (!imageName) {\n      setStatus(\"idle\");\n      return;\n    }\n    if (imageName) {\n      setStatus(\"pending\");\n      loadNewPictures();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [imageName]);\n\n  useEffect(() => {\n    if (page > 1) loadMorePictures();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  async function loadNewPictures() {\n    await apiService(imageName, page)\n      .then((pictures) => {\n        console.log(`работает newSearch`);\n\n        setPicturesData(pictures.hits);\n        setStatus(\"resolved\");\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-sequences\n        return setError(error), setStatus(\"rejected\");\n      });\n    avtoScroll();\n  }\n\n  async function loadMorePictures() {\n    await apiService(imageName, page)\n      .then((pictures) => {\n        console.log(`работает лоадМор`);\n        setPicturesData((prev) => [...prev, ...pictures.hits]);\n        setStatus(\"resolved\");\n      })\n      .catch((error) => {\n        // eslint-disable-next-line no-sequences\n        return setError(error), setStatus(\"rejected\");\n      });\n    avtoScroll();\n  }\n  const onModalOpen = (picture) => {\n    setIsOpenModal(true);\n    setPicture(picture);\n  };\n  const onCloseModal = (e) => {\n    if (e.code === \"Escape\" || e.currentTarget === e.target) {\n      setIsOpenModal(false);\n    }\n  };\n\n  const nextPage = () => {\n    setPage((prevState) => prevState + 1);\n    setStatus(\"pending-nextBlock\");\n  };\n\n  const avtoScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  if (status === \"idle\") {\n    return (\n      <p className=\"notifyText-onStart\">\n        Please! Enter word for searching images\n      </p>\n    );\n  }\n\n  if (status === \"pending\") {\n    return (\n      <Loader\n        className=\"loader\"\n        type=\"Grid\"\n        color=\"blue\"\n        height={100}\n        width={100}\n        timeout={4000}\n      />\n    );\n  }\n\n  if (status === \"pending-nextBlock\") {\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          <ImageGalleryItem pictures={picturesData} onClick={onModalOpen} />\n        </ul>\n        <Loader\n          className=\"loader\"\n          type=\"Grid\"\n          color=\"blue\"\n          height={100}\n          width={100}\n          timeout={4000}\n        />\n      </>\n    );\n  }\n\n  if (status === \"rejected\") {\n    return toast.error(error.message);\n  }\n  if (status === \"resolved\") {\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          <ImageGalleryItem pictures={picturesData} onClick={onModalOpen} />\n        </ul>\n        {isOpenModal && <Modal statusModal={isOpenModal} picture={picture} onCloseModal={onCloseModal} />}\n        {picturesData.length > 0 && <Button onClick={nextPage} />}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  imageName: PropTypes.string.isRequired,\n};\n","import './App.css';\nimport { useState } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\n\nfunction App () {\n  const [imageName, setImageName] = useState('');\n\n  const onSearchSubmit = imageName => {\n    setImageName( imageName );\n  };\n\n  \n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={onSearchSubmit} />\n        <ImageGallery imageName={imageName} />\n      </div>\n    );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}