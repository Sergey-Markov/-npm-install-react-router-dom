{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGalleryItem.js","Service/Service.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","imageName","setImageName","className","e","preventDefault","type","onChange","currentTarget","value","toLowerCase","trim","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","pictures","onClick","map","picture","id","webformatURL","tags","src","alt","apiService","imageSearch","page","fetch","then","response","ok","json","Promise","reject","Error","Button","Modal","componentDidMount","onCloseModal","props","window","addEventListener","componentWillUnmount","removeEventListener","this","largeImageURL","Component","ImageGallery","setPage","error","setError","picturesData","setPicturesData","isOpenModal","setIsOpenModal","setPicture","status","setStatus","a","console","log","hits","catch","avtoScroll","prev","useEffect","loadNewPictures","loadMorePictures","onModalOpen","scrollTo","top","document","documentElement","scrollHeight","behavior","color","height","width","timeout","toast","message","code","target","length","prevState","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3ec6860.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Searchbar ({onSubmit}) {\n  \n\n  const [imageName, setImageName] = useState('')\n\n  function resset() {\n    setImageName( '' );\n  }\n\n  const hadleAddInputValue = e => {\n    setImageName( e.currentTarget.value.toLowerCase().trim());\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(imageName);\n    resset();\n  };\n\n  \n\n  return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            onChange={hadleAddInputValue}\n            name=\"imageName\"\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={imageName}\n          />\n        </form>\n      </header>\n    );\n  \n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nexport default function ImageGalleryItem({ pictures, onClick }) {\n  return pictures.map(picture => {\n    const { id, webformatURL, tags } = picture;\n    return (\n      <li key={id} className=\"ImageGalleryItem\">\n        <img\n          src={webformatURL}\n          alt={tags}\n          className=\"ImageGalleryItem-image\"\n          onClick={() => onClick(picture)}\n        />\n      </li>\n    );\n  });\n}\n\nImageGalleryItem.propTypes = {\n  pictures: PropTypes.array.isRequired,\n  onClick: PropTypes.func,\n};\n","export default function apiService(imageSearch, page) {\n  const API_KEY = '22326636-8d9d25d1f9cff7f7e66e8dd75';\n  const BASE_URL = 'https://pixabay.com/api/';\n  return fetch(\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${imageSearch}&page=${page}&per_page=12&key=${API_KEY}`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Это ошибка, её нужно как-то решить'));\n  });\n}\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <div className=\"more\">\n      <button type=\"text\" className=\"more-loadBtn\" onClick={onClick}>\n        Load more\n      </button>\n    </div>\n  );\n}\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\n\nexport default class Modal extends Component {\n  componentDidMount = () => {\n    const { onCloseModal } = this.props;\n    window.addEventListener('keydown', onCloseModal);\n  };\n\n  componentWillUnmount = () => {\n    const { onCloseModal } = this.props;\n    window.removeEventListener('keydown', onCloseModal);\n  };\n\n  render() {\n    const { picture, onCloseModal } = this.props;\n    return (\n      <div className=\"Overlay\" onClick={onCloseModal}>\n        <div className=\"Modal\">\n          <img src={picture.largeImageURL} alt={picture.tags} />\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  picture: PropTypes.object.isRequired,\n  onCloseModal: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport apiService from '../../Service/Service';\nimport Button from '../Button/Button';\nimport Modal from '../Modal/Modal';\nimport Loader from 'react-loader-spinner';\n\nexport default function ImageGallery ({imageName}) {\n  // state = {\n  //   page: 1,\n  //   error: null,\n  //   picturesData: [],\n  //   isOpenModal: false,\n  //   picture: '',\n  //   status: 'idle',\n  // };\n\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [picturesData, setPicturesData] = useState([]);\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [picture, setPicture] = useState('');\n  const [status, setStatus] = useState('idle');\n\n  // async function componentDidUpdate(prevProps, prevState) {\n  //   // const { page } = this.state;\n  //   if (prevProps.imageName !== this.props.imageName) {\n  //     this.setState({ status: 'pending', page: 1, picturesData: [] });\n  //     await this.loadNewPictures();\n  //   }\n  //   if (prevState.page !== page && page > 1) {\n  //     this.setState({ status: 'pending-nextBlock' });\n  //     await this.loadMorePictures();\n  //   }\n  // }\n  // useEffect(() => {\n    \n  // }, [imageName]);\n\n  useEffect(() => {\n    if(!imageName){\n      setStatus('idle');\n      return;\n    };\n    if(imageName){\n      setStatus('pending');\n      loadNewPictures();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[imageName]);\n\n  useEffect(() => { \n    if(page>1)loadMorePictures();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[page]);\n\n  async function loadNewPictures() {\n    await apiService(imageName, page)\n      .then(pictures => {\n        console.log(`работает newSearch`);\n\n        // this.setState({ picturesData: pictures.hits, status: 'resolved' });\n        setPicturesData(pictures.hits);\n        setStatus('resolved');\n      })\n      .catch((error) => {return(\n        setError( error),\n        setStatus('rejected')\n        )});\n    avtoScroll();\n  }\n\n  async function loadMorePictures() {\n    await apiService(imageName, page)\n      .then(pictures => {\n        console.log(`работает лоадМор`);\n        setPicturesData((prev)=>[...prev,...pictures.hits])\n        setStatus('resolved');\n\n      })\n      .catch((error) => {return(\n        setError( error),\n        setStatus('rejected')\n        )});\n    avtoScroll();\n  }\n  const onModalOpen = picture => {\n    setIsOpenModal(true);\n    setPicture(picture);\n  };\n  const onCloseModal = e => {\n    if (e.code === 'Escape' || e.currentTarget === e.target) {\n      setIsOpenModal( false );\n    }\n  };\n\n   const nextPage =  () => {\n    \n    setPage(prevState => \n       prevState + 1\n    );\n    setStatus('pending-nextBlock');\n    \n    \n  };\n  \n  const avtoScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n \n  //   const { error, status, picturesData, picture, isOpenModal } = this.state;\n\n    if (status === 'idle') {\n      return (\n        <p className=\"notifyText-onStart\">\n          Please! Enter word for searching images\n        </p>\n      );\n    }\n\n    if (status === 'pending') {\n      return (\n        <Loader\n          className=\"loader\"\n          type=\"Grid\"\n          color=\"blue\"\n          height={100}\n          width={100}\n          timeout={4000}\n        />\n      );\n    }\n\n    if (status === 'pending-nextBlock') {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            <ImageGalleryItem\n              pictures={picturesData}\n              onClick={onModalOpen}\n            />\n          </ul>\n          <Loader\n            className=\"loader\"\n            type=\"Grid\"\n            color=\"blue\"\n            height={100}\n            width={100}\n            timeout={4000}\n          />\n        </>\n      );\n    }\n\n    if (status === 'rejected') {\n      return toast.error(error.message);\n    }\n    if (status === 'resolved') {\n      return (\n        <>\n          <ul className=\"ImageGallery\">\n            <ImageGalleryItem\n              pictures={picturesData}\n              onClick={onModalOpen}\n            />\n          </ul>\n          {isOpenModal && (\n            <Modal picture={picture} onCloseModal={onCloseModal} />\n          )}\n          {picturesData.length > 0 && <Button onClick={nextPage} />}\n        </>\n      );\n    }\n  \n}\n\nImageGallery.propTypes = {\n  imageName: PropTypes.string.isRequired,\n};\n","import './App.css';\nimport { useState } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\n\nfunction App () {\n  const [imageName, setImageName] = useState('');\n\n  const onSearchSubmit = imageName => {\n    setImageName( imageName );\n  };\n\n  \n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={onSearchSubmit} />\n        <ImageGallery imageName={imageName} />\n      </div>\n    );\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}